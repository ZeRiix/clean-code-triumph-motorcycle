// Generated by @duplojs/types-codegen
/* eslint-disable */
/* prettier-ignore */
/* istanbul ignore file */
/* v8 ignore start */
// noinspection JSUnusedGlobalSymbols
// @ts-nocheck
type CodegenRoutes = ({
    method: "POST";
    path: "/login";
    body: {
        email: string;
        password: string;
    };
    response: {
        code: 401;
        information: "user.wrongIdentifier";
        body?: undefined;
    } | {
        code: 401;
        information: "user.wrongIdentifier";
        body?: undefined;
    } | {
        code: 200;
        information: "user.logged";
        body: string;
    };
}) | ({
    method: "POST";
    path: "/bikes";
    body: {
        vin: string;
        modelName: string;
        registration: string;
        purchaseDate: [
            Date,
            number
        ];
        mileage: number;
        lastInterviewDate: Date;
        factoryYear: number;
    };
    headers?: {
        token?: string | undefined;
    } | undefined;
    response: {
        code: 403;
        information: "token.invalid";
        body?: undefined;
    } | {
        code: 404;
        information: "manager.notfoud";
        body?: undefined;
    } | {
        code: 409;
        information: "bike.vin.notavailable";
        body?: undefined;
    } | {
        code: 404;
        information: "bikeModel.notfound";
        body?: undefined;
    } | {
        code: 201;
        information: "bike.created";
        body: {
            vin: string;
            modelName: string;
            registration: string;
            factoryYear: number;
            mileage: number;
            purchaseDate: Date;
            stillInCirculation: boolean;
            lastInterviewDate: Date;
        };
    };
}) | ({
    method: "GET";
    path: "/bikes";
    query: {
        page: number;
    };
    headers?: {
        token?: string | undefined;
    } | undefined;
    response: {
        code: 403;
        information: "token.invalid";
        body?: undefined;
    } | {
        code: 404;
        information: "manager.notfoud";
        body?: undefined;
    } | {
        code: 200;
        information: "bikes.get";
        body: {
            vin: string;
            modelName: string;
            registration: string;
            factoryYear: number;
            mileage: number;
            purchaseDate: Date;
            stillInCirculation: boolean;
            lastInterviewDate: Date;
        }[];
    };
}) | ({
    method: "PATCH";
    path: "/bikes/{vin}/mielage";
    body: {
        mileage: number;
    };
    params: {
        vin: string;
    };
    headers?: {
        token?: string | undefined;
    } | undefined;
    response: {
        code: 403;
        information: "token.invalid";
        body?: undefined;
    } | {
        code: 404;
        information: "manager.notfoud";
        body?: undefined;
    } | {
        code: 404;
        information: "bike.notfound";
        body?: undefined;
    } | {
        code: 422;
        information: "bike.mileageUpdateFailed";
        body: string;
    } | {
        code: 200;
        information: "bike.mileageUpdated";
        body: {
            vin: string;
            modelName: string;
            registration: string;
            factoryYear: number;
            mileage: number;
            purchaseDate: Date;
            stillInCirculation: boolean;
            lastInterviewDate: Date;
        };
    };
}) | ({
    method: "GET";
    path: "/bike-models";
    query: {
        page: number;
    };
    headers?: {
        token?: string | undefined;
    } | undefined;
    response: {
        code: 403;
        information: "token.invalid";
        body?: undefined;
    } | {
        code: 404;
        information: "manager.notfoud";
        body?: undefined;
    } | {
        code: 200;
        information: "bikeModels.get";
        body: {
            name: string;
            type: "roadster" | "trail" | "sport" | "touring";
            interviewIntervalByKillometers: number;
            interviewIntervalByDay: number;
        }[];
    };
}) | ({
    method: "POST";
    path: "/clients/{clientSiret}/warranty";
    body: {
        startDate: Date;
        endDate: Date;
        description: string | null;
    };
    params: {
        clientSiret: string;
    };
    headers?: {
        token?: string | undefined;
    } | undefined;
    response: {
        code: 403;
        information: "token.invalid";
        body?: undefined;
    } | {
        code: 404;
        information: "manager.notfoud";
        body?: undefined;
    } | {
        code: 404;
        information: "client.notfound";
        body?: undefined;
    } | {
        code: 201;
        information: "warranty.created";
        body: {
            clientSiret: string;
            startDate: Date;
            endDate: Date;
            description: string | null;
        };
    };
}) | ({
    method: "POST";
    path: "/spare-part/{sparePartReference}/command";
    body: {
        quantity: number;
        unitPriceTTC: number;
        dayDeliveryDelay: number;
    };
    params: {
        sparePartReference: string;
    };
    headers?: {
        token?: string | undefined;
    } | undefined;
    response: {
        code: 403;
        information: "token.invalid";
        body?: undefined;
    } | {
        code: 404;
        information: "manager.notfoud";
        body?: undefined;
    } | {
        code: 404;
        information: "sparePart.notfound";
        body?: undefined;
    } | {
        code: 201;
        information: "sparePartCommanded.created";
        body: {
            id: string;
            orderDate: Date;
            reference: string;
            unitPriceTTC: number;
            quantity: number;
            dayDeliveryDelay: number;
        };
    };
});

export { CodegenRoutes };
/* v8 ignore stop */
